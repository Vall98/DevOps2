### NAMESPACES
apiVersion: v1
kind: Namespace
metadata:
  name: rook-ceph

---
### INGRESS
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: hubblenews
  annotations:
    kubernetes.io/ingress.global-static-ip-name: hubblenews-ip
    # nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: nginx
          servicePort: 80
      - path: /images
        backend:
          serviceName: images
          servicePort: 80
      - path: /api
        backend:
          serviceName: api
          servicePort: 80

---
### SERVICE - IMAGE
apiVersion: v1
kind: Service
metadata:
  name: images
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: images
  type: NodePort

---
### SERVICE - API
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: api
  type: NodePort

---
### SERVICE - NGINX
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: nginx
  type: NodePort

---
### VOLUMES
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hubblenews-claim
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "rook-ceph-block"
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hubblenews-app-claim
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: "rook-ceph-block"
  resources:
    requests:
      storage: 10Gi

---
### STATEFULSET - IMAGE
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: images-statefulset
spec:
  selector:
    matchLabels:
      app: images
  serviceName: "images-service"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: images
    spec:
      containers:
      - name: images
        image: IMAGES_IMAGE
        # ports:
        # - containerPort: 80
      #   volumeMounts:
      #   - name: hubblevolume
      #     mountPath: /home/images
      # volumes:
      # - name: hubblevolume
      #   persistentVolumeClaim:
      #     claimName: hubblenews-claim

---
### STATEFULSET - API
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api-statefulset
spec:
  selector:
    matchLabels:
      app: api
  serviceName: "api-service"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: API_IMAGE
        ports:
        - containerPort: 80
        # volumeMounts:
        # - name: hubblevolume
        #   mountPath: /home/images
        env:
        - name: API_PORT
          value: "8000"
      # volumes:
      # - name: hubblevolume
      #   persistentVolumeClaim:
      #     claimName: hubblenews-claim

---
### DEPLOYEMENT - NGINX
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: NGINX_IMAGE
        # ports:
        # - containerPort: 80
      #   volumeMounts:
      #   - name: hubblevolume-app
      #     mountPath: /home/app
      # volumes:
      # - name: hubblevolume-app
      #   persistentVolumeClaim:
      #     claimName: hubblenews-app-claim
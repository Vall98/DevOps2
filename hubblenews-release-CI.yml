pr:
- master

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  ContainerRegistry: 'hubblenews-gcr'
  project_id: 'devops2-301412'
  images_image_tag: 'eu.gcr.io\/$(project_id)\/images:$(Build.BuildId)'
  api_image_tag: 'eu.gcr.io\/$(project_id)\/api:$(Build.BuildId)'
  nginx_image_tag: 'eu.gcr.io\/$(project_id)\/nginx:$(Build.BuildId)'
  dev_url: '34.117.127.138'
  prod_url: '34.117.153.185'

stages:
  - stage: Build_front_ressources
    displayName: Build front ressources
    jobs:
    - job: Build
      displayName: 'Build Image'
      steps:
        - task: Npm@1
          displayName: 'npm install'
          inputs:
            command: install
            workingDir: '$(System.DefaultWorkingDirectory)/front'
        - script: |
            set -e
            sed -i 's/IMAGES_IMAGE/$(images_image_tag)/g' config/deployment.yml
            sed -i 's/API_IMAGE/$(api_image_tag)/g' config/deployment.yml
            sed -i 's/NGINX_IMAGE/$(nginx_image_tag)/g' config/deployment.yml
            cd front/
            sed -i 's/API_BASE_URL/"$(dev_url)\/api\/"/g' src/environments/environment.ts
            sed -i 's/API_BASE_URL/"$(prod_url)\/api\/"/g' src/environments/environment.prod.ts
            sudo npm install -g @ionic/cli
            ionic capacitor sync
        - task: Docker@2
          displayName: 'Build api image'
          inputs:
            command: 'buildAndPush'
            containerRegistry: '$(ContainerRegistry)'
            Dockerfile: './config/api/Dockerfile'
            buildContext: './'
            repository: $(project_id)/api
            tags: $(Build.BuildId)
        - task: Docker@2
          displayName: 'Build nginx image'
          inputs:
            command: 'buildAndPush'
            containerRegistry: '$(ContainerRegistry)'
            Dockerfile: './config/nginx/Dockerfile'
            buildContext: './'
            repository: $(project_id)/nginx
            tags: $(Build.BuildId)
        - script: |
            set -e
            mkdir -p drop/
            cp config/deployment.yml drop/
          displayName: Prepare files for Archive
        - task: CopyFiles@2
          inputs:
            contents: 'drop/**'
            targetFolder: $(Build.ArtifactStagingDirectory)
        - task: PublishBuildArtifacts@1
          inputs:
            pathToPublish: $(Build.ArtifactStagingDirectory)/drop
            artifactName: drop